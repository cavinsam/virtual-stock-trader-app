# This file defines and connects all the services for your application.
# The 'version' tag is no longer needed in modern Docker Compose.
services:

  # 1. The MySQL Database Service
  db:
    image: mysql:8.0
    container_name: vst-mysql-db
    restart: unless-stopped
    environment:
      # These variables are now securely read from your .env file.
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: virtual_stock_trader
    ports:
      - "3306:3306"
    volumes:
      # This creates a persistent volume to store your database data,
      # so your user data is not lost when you stop the containers.
      - mysql-data:/var/lib/mysql

  # 2. The Spring Boot Backend Service
  backend:
    build:
      context: ./backend/virtual-stock-trader # Updated path based on your structure
    container_name: vst-backend-app
    restart: unless-stopped
    depends_on:
      - db # Ensures the database starts before the backend.
    ports:
      - "8081:8081"
    environment:
      # This is the critical part: it tells Spring Boot to connect to the 'db' container.
      - SPRING_DATASOURCE_URL=jdbc:mysql://db:3306/virtual_stock_trader
      - SPRING_DATASOURCE_USERNAME=root
      # These variables are also securely read from your .env file.
      - SPRING_DATASOURCE_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - JWT_SECRET=${JWT_SECRET}
      - ALPHAVANTAGE_API_KEY=${ALPHAVANTAGE_API_KEY}

  # 3. The React Frontend Service
  frontend:
    build:
      context: ./frontend/virtual-stock-trader/frontend # Updated path based on your structure
    container_name: vst-frontend-app
    restart: unless-stopped
    ports:
      # This makes your website available at http://localhost
      - "80:80"
    depends_on:
      - backend # Ensures the backend starts before the frontend.

# This section defines the named volume used by the 'db' service for data persistence.
volumes:
  mysql-data: